package ba.bitcamp.hajrudin.programming.example;

import java.util.Arrays;
import java.util.Scanner;

public class Hand{
	private Card [] cards;
	private boolean hasWinner;
	private Card [] newCards;
	private int counter;

	public Hand(Card[] cards) {
		super();
		this.cards = cards;
		this.hasWinner=false;
		this.newCards= new Card [this.cards.length];
		this.counter=0;
	}	
	
	public void playRemi(Player p){
		Scanner input = new Scanner(System.in);
		if(p.getPlayerCard(14)!=null){
			dropCard(p);
		} else {
			takeCard(p);
			dropCard(p);
			System.out.println("Do you wanna open? (Yes/No)");
			String open = input.nextLine();
			if(open.equalsIgnoreCase("yes"));
			this.hasWinner=isWiner();
		}
	}
	
	public boolean isWiner() {
		int counter =0;
		Scanner input = new Scanner(System.in);
		while(true){
		System.out.println("Chose cards: (e.g. 1,2,3,4 than Ener) ");
		String s = input.nextLine();
		String [] s1 = s.split(",");
		int[] arr = new int [s1.length];
		for(int i = 0; i<arr.length;i++){
			arr[i]=Integer.parseInt(s1[i]);
			counter++;
		}
		if(compareCards(arr)==false){
			System.out.println("Wrong choise of cards");
			return false;
		}else if(counter == 14){
			System.out.println("YOU WON");
			return true;
		}
		}
	}
	
	

	public boolean compareCards(int[] arr) {
		return true;
		
	}

	public void dropCard(Player p){
		Scanner input = new Scanner(System.in);
		System.out.println("Enter number of card witch you wanna drop: ");
		p.sort();
		System.out.println(p.toString());
		int temp = input.nextInt();
		if(temp != 15){
			newCards[counter]=p.getPlayerCard(temp-1);
			p.setPlayerCard(temp-1, p.getPlayerCard(14));
			p.setPlayerCard(14, null);
			counter++;
		}
	}
	
	public void takeCard(Player p){
		System.out.println("You got a new card!");
		if(this.cards[0]==null){
			for(int i = 0; i<cards.length;i++){
				this.cards[i]=this.newCards[i];
				this.counter=0;
			}
		} 
		for(int i = cards.length-1; i>=0; i--){
			if(cards[i]!=null){
				p.setPlayerCard(14, cards[i]);
				this.cards[i]=null;
				break;
			}
		} 
		
	}
	
	public boolean getHasWinner(){
		return this.hasWinner;
	}
	
}
